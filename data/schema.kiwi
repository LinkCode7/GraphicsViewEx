package sindyk;

// 矩形
struct Rect {
	float left;
	float top;
	float right;
	float bottom;
}
// 二维点
struct Point2dXY {
	float x;
	float y;
}
// 二维矩阵
struct Matrix2d {
    float _m11;
	float _m12;
	float _m13;
    float _m21;
	float _m22;
	float _m23;
    float _m31;
	float _m32;
	float _m33;
}

// 多边形的边-线段
struct PolySegment {
	Point2dXY begin;
	Point2dXY end;
}
// 多边形的边-弧线
struct PolyArc {
	Point2dXY center;
    float radius;
	float radius2;
    float beginAngle;
    float sweepAngle;
}

message PolyElement {
	PolySegment segment = 1;
	PolyArc arc = 2;
}

// 节点类型
enum NodeType{
	ePolyline = 1;
	ePolygon = 2;
	eSegment = 3;
	eArc = 4;
	eBezier = 5;
	eBox = 6;
	eSymbolPoint = 7;
	eSquarePoints = 8;
	eChip = 1001;
}

message GraphicNode {
	// IGeGraphic
	NodeType type = 1;
	uint argb = 2;
	Matrix2d mat = 3;
	uint id = 4;
	string name = 5;
	uint flags = 6;

	// GePolygon，这两个数据要么同时存在，要么都为空
	uint[] polyIndexes = 7; // 若存在边，则至少存在一个外轮廓
	PolyElement[] polyElements = 8;

	// GeBox
	Rect rect = 9;

	// IGePointSet
    Point2dXY[] points = 10;

	// GeSymbolPoint
    uint symbolType = 11;
}

message Document {
	// doc
	string create_version = 1;
	string last_open_version = 2;

	// view
	Matrix2d matView = 3; // 画布上的矩阵
	uint background = 4; // 背景色
	uint maxId = 5; // scene中的最大ID

	// node
	GraphicNode[] graphics = 6;
}
